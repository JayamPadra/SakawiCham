{"version":3,"sources":["enums/enum.ts","components/countDownBar.tsx","model/AhierDate.ts","utility/constant.ts","utility/helper.ts","components/day.tsx","components/month.tsx","components/dayAhier.tsx","components/monthAhier.tsx","model/AwalDate.ts","components/dayAwal.tsx","components/monthAwal.tsx","components/calendar.tsx","Layout.tsx","App.tsx","index.tsx"],"names":["MonthEnum","DayEnum","IkasSarakEnum","NasakEnum","AwalMonthEnum","AhierMonthEnum","CountDownBar","props","useState","percent","setPercent","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","setTimeout","toDate","now","Date","getTime","distance","Math","floor","init","ProgressBar","variant","variantType","toString","label","dateName","slice","addAhierYears","currentYear","addedYears","nasak","ikasSarak","yearNumber","firstDateOfSakawiAwal_Lieh_1439","firstDateOfSakawiAhier_Pabuei_JimLuic_2019","awalYearArray","no","name","Liéh","numberOfDays","Hak","Jim","Jây","Dal","Bak","Waw","JimLuic","awalMonthArray","Muharam","Syafar","Rabiulawal","Rabiulakhir","Jamadilawal","Jamadilakhir","Rejab","Sykban","Ramadan","Syawal","Julkaejah","Julhiijaah","Helper","year","month","yearName","yearItem","dataConfig","filter","x","ArabYear","result","date","differenceInDays","remain","getMod","quotient","abs","awalYearNumber","awalYear","awalMonth","awalDate","totalYears","i","length","numberDaysOfCurrentYear","totalMonths","j","n","m","newDt","setDate","getDate","toYearAhier","startAhierYear","Pabuei","startAwalDate","getAwalDateByGregoryDate","numberOfAhierYear","y","newYear","numberOfAhierMonth","getMonthNumbersOfAhierYear","dayNumbersOfAhierMonth","getDayNumbersOfAhierMonth","ahierMonthItem","ahierYear","ahierMonth","firstDayOfAhierMonth","dateOfGregoryCalendar","addGregoryDays","dayNumbersOfAwalMonth","getDayNumbersOfAwalMonth","firstDayOfAwalMonth","push","divStyle","display","flexDirection","fontSize","Day","style","getMonth","Month","setYear","setMonth","firstDateOfMonth","setFirstDateOfMonth","firstDayOfMonth","setFirstDayOfMonth","React","firstDate","getDay","count","rows","weeks","cells","cellDate","Container","Row","Col","md","textAlign","ButtonToolbar","ButtonGroup","Button","className","onClick","marginLeft","nowDate","getFullYear","Table","striped","bordered","hover","height","tableLayout","map","d","index","padding","color","paddingTop","paddingBottom","DayAhier","dateAhier","MonthAhier","addDays","currentDate","addedDays","BilanSa","Kabaw","newDays","newMonth","addAwalYears","newIkasSarak","DayAwal","dateAwal","MonthAwal","startDay","Number","parseInt","getStartDayByAwalMonth","currentMonth","addedMonths","addAwalMonths","console","log","JSON","stringify","Calendar","sakawiType","yearAwal","monthAwal","yearAhier","monthAhier","footerStyle","background","justifyContent","Layout","fluid","Navbar","bg","expand","Brand","href","Toggle","Collapse","id","Nav","maxHeight","navbarScroll","Link","NavDropdown","title","Item","Divider","sm","Card","Header","ListGroup","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8fdf5ed.chunk.js","sourcesContent":["export declare type VariantType = 'primary' | 'info' | 'secondary' | 'success' | 'warning' | 'danger' | 'light' | 'link';\r\n\r\nexport enum MonthEnum {\r\n    January = 0,\r\n    February,\r\n    March,\r\n    April,\r\n    May,\r\n    June,\r\n    July,\r\n    August,\r\n    September,\r\n    October,\r\n    November,\r\n    December\r\n}\r\n\r\nexport enum DayEnum {\r\n    Sunday = 0,\r\n    Monday,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday\r\n}\r\n\r\nexport enum IkasSarakEnum {\r\n    Liéh = 0,\r\n    Hak,\r\n    Jim,\r\n    Jây,\r\n    Dal,\r\n    Bak,\r\n    Waw,\r\n    JimLuic\r\n}\r\n\r\nexport enum NasakEnum {\r\n    Takuh = 0,\r\n    Kabaw,\r\n    Rimaong,\r\n    Tapay,\r\n    InâGirai,\r\n    UlaAnaih,\r\n    Asaih,\r\n    Pabaiy,\r\n    Kra,\r\n    Manuk,\r\n    Asau,\r\n    Pabuei\r\n}\r\n\r\nexport enum AwalMonthEnum {\r\n    Muharam = 0,\r\n    Syafar,\r\n    Rabiulawal,\r\n    Rabiulakhir,\r\n    Jamadilawal,\r\n    Jamadilakhir,\r\n    Rejab,\r\n    Sykban,\r\n    Ramadan,\r\n    Syawal,\r\n    Julkaejah,\r\n    Julhiijaah\r\n}\r\n\r\nexport enum AhierMonthEnum {\r\n    BilanSa = 0,\r\n    BilanDua,\r\n    BilanKlau,\r\n    BilanPak,\r\n    BilanLima,\r\n    BilanNem,\r\n    BilanTajuh,\r\n    BilanDalipan,\r\n    BilanSalipan,\r\n    BilanSapluh,\r\n    BilanPuis,\r\n    BilanMak,\r\n    BilanBhang\r\n}\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport { VariantType } from \"../enums/enum\";\r\n\r\nexport interface CountDownBarProps {\r\n    dateName: string;\r\n    variantType: VariantType;\r\n    toDate: Date;\r\n}\r\n\r\nexport const CountDownBar = (props: CountDownBarProps) => {\r\n    const [percent, setPercent] = useState(100);\r\n    const [days, setDays] = useState(0);\r\n    const [hours, setHours] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            init();\r\n        }, 1000);\r\n    });\r\n\r\n    function init() {\r\n        if (!props.toDate) {\r\n            return;\r\n        }\r\n\r\n        const now = new Date().getTime();\r\n        const distance = props.toDate.getTime() - now;\r\n        const timeOfYear = 365 * 24 * 60 * 60 * 1000;\r\n        const percent = distance / timeOfYear * 100;\r\n        setPercent(percent);\r\n\r\n        // Time calculations for days, hours, minutes and seconds\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n        setDays(days);\r\n        setHours(hours);\r\n        setMinutes(minutes);\r\n        setSeconds(seconds);\r\n    }\r\n\r\n    return (\r\n        <ProgressBar variant={props.variantType.toString()} now={percent}\r\n            label={`${props.dateName}: còn ${days} ngày - ${(\"0\" + hours).slice(-2)}h${(\"0\" + minutes).slice(-2)}'${(\"0\" + seconds).slice(-2)}\"`} />\r\n    );\r\n}","import { AhierMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\n\r\nexport interface AhierDate {\r\n    date: number;\r\n    month: AhierMonthEnum;\r\n    year: AhierYear;\r\n}\r\nexport interface AhierYear {\r\n    nasak: NasakEnum;\r\n    ikasSarak: IkasSarakEnum;\r\n    yearNumber?: number;\r\n}\r\n\r\nexport function addAhierYears(currentYear: AhierYear, addedYears: number) {\r\n    let newNasak = (currentYear.nasak + addedYears) % 12;\r\n    let newIkasSarak = (currentYear.ikasSarak + addedYears) % 8;\r\n    let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n    let result: AhierYear = {\r\n        nasak: newNasak,\r\n        ikasSarak: newIkasSarak,\r\n        yearNumber: newYearNumber\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\n\r\nexport const firstDateOfSakawiAwal_Lieh_1439 = new Date(2017, 8, 22);//22/09/2017\r\nexport const yearNumberOfSakawiAwal_Lieh_1439 = 1439;\r\nexport const firstDateOfSakawiAwal_Hak_1440 = new Date(2018, 8, 11);\r\nexport const firstDateOfSakawiAhier_Pabuei_JimLuic_2019 = new Date(2019, 3, 4);//04/04/2019\r\nexport const totalDaysOf8AwalYearCycle = 2835;\r\n\r\nexport const awalYearArray: { no: number; name: IkasSarakEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: IkasSarakEnum.Liéh, numberOfDays: 354 },\r\n    { no: 2, name: IkasSarakEnum.Hak, numberOfDays: 355 },\r\n    { no: 3, name: IkasSarakEnum.Jim, numberOfDays: 354 },\r\n    { no: 4, name: IkasSarakEnum.Jây, numberOfDays: 354 },\r\n    { no: 5, name: IkasSarakEnum.Dal, numberOfDays: 355 },\r\n    { no: 6, name: IkasSarakEnum.Bak, numberOfDays: 354 },\r\n    { no: 7, name: IkasSarakEnum.Waw, numberOfDays: 354 },\r\n    { no: 8, name: IkasSarakEnum.JimLuic, numberOfDays: 355 }\r\n];\r\n\r\nexport const awalMonthArray: { no: number; name: AwalMonthEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: AwalMonthEnum.Muharam, numberOfDays: 30 },\r\n    { no: 2, name: AwalMonthEnum.Syafar, numberOfDays: 29 },\r\n    { no: 3, name: AwalMonthEnum.Rabiulawal, numberOfDays: 30 },\r\n    { no: 4, name: AwalMonthEnum.Rabiulakhir, numberOfDays: 29 },\r\n    { no: 5, name: AwalMonthEnum.Jamadilawal, numberOfDays: 30 },\r\n    { no: 6, name: AwalMonthEnum.Jamadilakhir, numberOfDays: 29 },\r\n    { no: 7, name: AwalMonthEnum.Rejab, numberOfDays: 30 },\r\n    { no: 8, name: AwalMonthEnum.Sykban, numberOfDays: 29 },\r\n    { no: 9, name: AwalMonthEnum.Ramadan, numberOfDays: 30 },\r\n    { no: 10, name: AwalMonthEnum.Syawal, numberOfDays: 29 },\r\n    { no: 11, name: AwalMonthEnum.Julkaejah, numberOfDays: 30 },\r\n    { no: 12, name: AwalMonthEnum.Julhiijaah, numberOfDays: 30 }\r\n]","import dataConfig from '../data/SakawiTakaiCiim.json';\r\nimport { AhierMonthEnum, AwalMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { addAhierYears, AhierYear } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalYear } from '../model/AwalDate';\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport { awalMonthArray, awalYearArray, firstDateOfSakawiAhier_Pabuei_JimLuic_2019, firstDateOfSakawiAwal_Lieh_1439, totalDaysOf8AwalYearCycle, yearNumberOfSakawiAwal_Lieh_1439 } from './constant';\r\n\r\nexport default class Helper {\r\n    //#region Awal\r\n    static getDayNumbersOfAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let numberOfDay = 0;\r\n\r\n        // Tháng lẻ: (30 ngày), gồm: 1,3,5,7,9,11.\r\n        // Tháng chẳn: (29 ngày), gồm: 2,4,6,8,10. \r\n        if (month === AwalMonthEnum.Muharam || month === AwalMonthEnum.Rabiulawal || month === AwalMonthEnum.Jamadilawal ||\r\n            month === AwalMonthEnum.Rejab || month === AwalMonthEnum.Ramadan || month === AwalMonthEnum.Julkaejah) {\r\n            numberOfDay = 30;\r\n        } else if (month === AwalMonthEnum.Syafar || month === AwalMonthEnum.Rabiulakhir || month === AwalMonthEnum.Jamadilakhir ||\r\n            month === AwalMonthEnum.Sykban || month === AwalMonthEnum.Syawal) {\r\n            numberOfDay = 29;\r\n        } else {\r\n            // Riêng tháng 12: năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic) 30 ngày, \r\n            // năm thường (thun \"Wak\") 29 ngày.\r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                numberOfDay = 30;\r\n            } else {\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getStartDayByAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let yearName = IkasSarakEnum[year.ikasSarak];\r\n        let yearItem = dataConfig.filter(x => x.ArabYear === yearName)[0];\r\n        let result = '';\r\n\r\n        switch (month) {\r\n            case 0:\r\n                result = yearItem['Month_01'];\r\n                break;\r\n            case 1:\r\n                result = yearItem['Month_02'];\r\n                break;\r\n            case 2:\r\n                result = yearItem['Month_03'];\r\n                break;\r\n            case 3:\r\n                result = yearItem['Month_04'];\r\n                break;\r\n            case 4:\r\n                result = yearItem['Month_05'];\r\n                break;\r\n            case 5:\r\n                result = yearItem['Month_06'];\r\n                break;\r\n            case 6:\r\n                result = yearItem['Month_07'];\r\n                break;\r\n            case 7:\r\n                result = yearItem['Month_08'];\r\n                break;\r\n            case 8:\r\n                result = yearItem['Month_09'];\r\n                break;\r\n            case 9:\r\n                result = yearItem['Month_10'];\r\n                break;\r\n            case 10:\r\n                result = yearItem['Month_11'];\r\n                break;\r\n            case 11:\r\n                result = yearItem['Month_12'];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getAwalDateByGregoryDate(date: Date) {\r\n        let differenceInTime = date.getTime() - firstDateOfSakawiAwal_Lieh_1439.getTime();\r\n        let differenceInDays = differenceInTime / (1000 * 3600 * 24);\r\n        let remain = Helper.getMod(differenceInDays, totalDaysOf8AwalYearCycle);\r\n        let quotient = Math.floor(Math.abs(differenceInDays) / totalDaysOf8AwalYearCycle);\r\n\r\n        let awalYearNumber = yearNumberOfSakawiAwal_Lieh_1439;\r\n        let awalYear = IkasSarakEnum.Liéh;\r\n        let awalMonth = AwalMonthEnum.Muharam;\r\n        let awalDate = 0;\r\n        let totalYears = 0;\r\n        for (let i = 0; i < awalYearArray.length; i++) {\r\n            totalYears += awalYearArray[i].numberOfDays;\r\n            if (remain < totalYears) {\r\n                awalYear = awalYearArray[i].name;\r\n\r\n                //TODO\r\n                if (differenceInDays > 0) {\r\n                    awalYearNumber += (quotient * 8) + i;\r\n                } else {\r\n                    awalYearNumber -= (quotient * 8) + i;\r\n                }\r\n                let numberDaysOfCurrentYear = remain - (totalYears - awalYearArray[i].numberOfDays);\r\n\r\n                let totalMonths = 0;\r\n                for (let j = 0; j < awalMonthArray.length; j++) {\r\n                    totalMonths += awalMonthArray[j].numberOfDays;\r\n                    if (numberDaysOfCurrentYear < totalMonths) {\r\n                        awalMonth = awalMonthArray[j].name;\r\n                        let numberDaysOfCurrentMonth = numberDaysOfCurrentYear - (totalMonths - awalMonthArray[j].numberOfDays);\r\n                        awalDate = numberDaysOfCurrentMonth + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let resultDate: AwalDate = {\r\n            date: awalDate,\r\n            month: awalMonth,\r\n            year: { ikasSarak: awalYear, yearNumber: awalYearNumber }\r\n        }\r\n\r\n        return resultDate;\r\n    }\r\n\r\n    static getMod(n: number, m: number) {\r\n        const remain = n % m;\r\n        return Math.floor(remain >= 0 ? remain : remain + m);\r\n    };\r\n    //#endregion\r\n\r\n    //#region Ahier\r\n    static getDayNumbersOfAhierMonth(year: AhierYear, month: AhierMonthEnum) {\r\n        let numberOfDay = 0;\r\n\r\n        /*// Tháng lẻ: (30 ngày), gồm: 1,3,5,7,9,11.\r\n        // Tháng chẳn: (29 ngày), gồm: 2,4,6,8,10. \r\n        if (month === AwalMonth.Muharam || month === AwalMonth.Rabiulawal || month === AwalMonth.Jamadilawal || \r\n            month === AwalMonth.Rejab || month === AwalMonth.Ramadan || month === AwalMonth.Julkaejah) {\r\n            numberOfDay = 30;\r\n        } else if (month === AwalMonth.Syafar || month === AwalMonth.Rabiulakhir || month === AwalMonth.Jamadilakhir || \r\n            month === AwalMonth.Sykban || month === AwalMonth.Syawal ) {\r\n            numberOfDay = 29;\r\n        } else {\r\n            // Riêng tháng 12: năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic) 30 ngày, \r\n            // năm thường (thun \"Wak\") 29 ngày.\r\n            if (year === IkasSarak.Hak || year === IkasSarak.Dal ||year === IkasSarak.JimLuic) {\r\n                numberOfDay =30;\r\n            } else {\r\n                numberOfDay = 29;\r\n            }\r\n        }*/\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getMonthNumbersOfAhierYear(year: AhierYear) {\r\n        if (year.ikasSarak === IkasSarakEnum.Hak\r\n            || year.ikasSarak === IkasSarakEnum.Dal\r\n            || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n            return 13;\r\n        }\r\n        return 12;\r\n    }\r\n\r\n    static getStartDayByAhierMonth(year: AhierYear, month: AhierMonthEnum) {\r\n        let yearName = IkasSarakEnum[year.ikasSarak];\r\n        let yearItem = dataConfig.filter(x => x.ArabYear === yearName)[0];\r\n        let result = '';\r\n\r\n        /*switch (month) {\r\n            case 0:\r\n                result = yearItem['Month_01'];\r\n                break;\r\n            case 1:\r\n                result = yearItem['Month_02'];\r\n                break;\r\n            case 2:\r\n                result = yearItem['Month_03'];\r\n                break;\r\n            case 3:\r\n                result = yearItem['Month_04'];\r\n                break;\r\n            case 4:\r\n                result = yearItem['Month_05'];\r\n                break;\r\n            case 5:\r\n                result = yearItem['Month_06'];\r\n                break;\r\n            case 6:\r\n                result = yearItem['Month_07'];\r\n                break;\r\n            case 7:\r\n                result = yearItem['Month_08'];\r\n                break;\r\n            case 8:\r\n                result = yearItem['Month_09'];\r\n                break;\r\n            case 9:\r\n                result = yearItem['Month_10'];\r\n                break;\r\n            case 10:\r\n                result = yearItem['Month_11'];\r\n                break;\r\n            case 11:\r\n                result = yearItem['Month_12'];\r\n                break;\r\n            default:\r\n                break;\r\n        }*/\r\n\r\n        return result;\r\n    }\r\n    //#endregion\r\n    static addGregoryDays(date: Date, numberOfDays: number) {\r\n        let newDt = new Date(date);\r\n        newDt.setDate(date.getDate() + numberOfDays);\r\n        return newDt;\r\n    }\r\n\r\n    static buildMatrixCalendar(toYearAhier: number) {\r\n        let result: MatrixCalendarType[] = [];\r\n\r\n        const startAhierYear: AhierYear = {\r\n            nasak: NasakEnum.Pabuei,\r\n            ikasSarak: IkasSarakEnum.Jim,\r\n            yearNumber: 2019\r\n        }\r\n        const startAwalDate = Helper.getAwalDateByGregoryDate(firstDateOfSakawiAhier_Pabuei_JimLuic_2019)\r\n        const numberOfAhierYear = toYearAhier - (startAhierYear.yearNumber ?? 0);\r\n\r\n        for (let y = 0; y < numberOfAhierYear; y++) {\r\n            const newYear = addAhierYears(startAhierYear, y);\r\n            const numberOfAhierMonth = Helper.getMonthNumbersOfAhierYear(newYear);\r\n\r\n            for (let m = 0; m < numberOfAhierMonth; m++) {\r\n                const awalYear: AwalYear = {\r\n                    ikasSarak: startAwalDate.year.ikasSarak,\r\n                    yearNumber: startAwalDate.year.yearNumber\r\n                }\r\n\r\n                const dayNumbersOfAhierMonth = Helper.getDayNumbersOfAhierMonth(newYear, m);\r\n                const newGregoryDate = Helper.addGregoryDays(firstDateOfSakawiAhier_Pabuei_JimLuic_2019, dayNumbersOfAhierMonth);\r\n\r\n                let ahierMonthItem: MatrixCalendarType = {\r\n                    ahierYear: newYear,\r\n                    ahierMonth: m,\r\n                    dayNumbersOfAhierMonth: dayNumbersOfAhierMonth,\r\n                    firstDayOfAhierMonth: 5,\r\n                    dateOfGregoryCalendar: newGregoryDate,\r\n                    awalYear: awalYear,\r\n                    awalMonth: startAwalDate.month,\r\n                    dayNumbersOfAwalMonth: Helper.getDayNumbersOfAwalMonth(awalYear, m),\r\n                    firstDayOfAwalMonth: 7\r\n                }\r\n\r\n                result.push(ahierMonthItem);\r\n            }\r\n\r\n        }\r\n\r\n        return result;\r\n    }\r\n}","import { AhierDate } from \"../model/AhierDate\";\r\nimport { AwalDate } from \"../model/AwalDate\";\r\n\r\ninterface DayProps {\r\n    date: Date;\r\n    dateAwal?: AwalDate;\r\n    dateAhier?: AhierDate;\r\n}\r\n\r\nconst divStyle: React.CSSProperties = {\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    fontSize: \"0.8rem\"\r\n}\r\n\r\nexport const Day = (props: DayProps) => {\r\n    return (\r\n        <td>\r\n            <div style={divStyle}>\r\n                {props.date.getDate()}.{props.date.getMonth() + 1}\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </td>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, ButtonToolbar, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { MonthEnum } from \"../enums/enum\";\r\nimport Helper from '../utility/helper';\r\nimport { Day } from \"./day\";\r\n\r\ninterface MonthProps {\r\n    year: number;\r\n    month: number;\r\n}\r\n\r\nexport const Month = (props: MonthProps) => {\r\n    const [year, setYear] = useState(props.year);\r\n    const [month, setMonth] = useState(props.month);\r\n    const [firstDateOfMonth, setFirstDateOfMonth] = useState(new Date());\r\n    const [firstDayOfMonth, setFirstDayOfMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            const firstDate = new Date(year, month, 1);\r\n            setFirstDateOfMonth(firstDate);\r\n            setFirstDayOfMonth(firstDate.getDay());\r\n        }\r\n\r\n        init();\r\n    }, [year, month]);\r\n\r\n    /*function addGregoryDays(date: Date, numberOfDays: number) {\r\n        let newDt = new Date(date);\r\n        newDt.setDate(date.getDate() + numberOfDays);\r\n        return newDt;\r\n    }*/\r\n\r\n    function handleGoToToday() {\r\n        const nowDate = new Date();\r\n        setMonth(nowDate.getMonth());\r\n        setYear(nowDate.getFullYear());\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        if (month > 0) {\r\n            setMonth(month - 1);\r\n        } else {\r\n            setMonth(11);\r\n            setYear(year - 1);\r\n        }\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        if (month + 1 < 11) {\r\n            setMonth(month + 1);\r\n        } else {\r\n            setMonth(0);\r\n            setYear(year + 1);\r\n        }\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let cellDate = Helper.addGregoryDays(firstDateOfMonth, (count - firstDayOfMonth));\r\n            cells.push(<Day key={`cell${weeks}-${days}`} date={cellDate}></Day>);\r\n            count++\r\n        }\r\n\r\n        rows.push(<tr key={weeks}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={4} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginLeft: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Today</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={4} style={{ textAlign: \"center\" }}>\r\n                    <h2>{MonthEnum[month]} {year}</h2>\r\n                </Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table striped bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import { Col, Row } from \"react-bootstrap\";\r\nimport { IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate } from \"../model/AhierDate\";\r\nimport { AwalDate } from \"../model/AwalDate\";\r\n\r\ninterface DayAhierProps {\r\n    date?: Date;\r\n    dateAwal?: AwalDate;\r\n    dateAhier: AhierDate;\r\n}\r\n\r\nconst divStyle: React.CSSProperties = {\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    fontSize: \"0.8rem\",\r\n    color: \"red\",\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"0.1rem\",\r\n}\r\n\r\nexport const DayAhier = (props: DayAhierProps) => {\r\n    return (\r\n        <td>\r\n            <Row>\r\n                <Col md={4}></Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={4}></Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={4}></Col>\r\n                <Col style={divStyle} md={4}>\r\n                    {props.dateAhier.date}.{props.dateAhier.month + 1}.{NasakEnum[props.dateAhier.year.nasak]}-{IkasSarakEnum[props.dateAhier.year.ikasSarak]}\r\n                </Col>\r\n            </Row>\r\n        </td>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, ButtonToolbar, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierYear } from \"../model/AhierDate\";\r\nimport Helper from \"../utility/helper\";\r\nimport { DayAhier } from \"./dayAhier\";\r\n\r\ninterface MonthAhierProps {\r\n    year: AhierYear;\r\n    month: AhierMonthEnum;\r\n}\r\n\r\nexport const MonthAhier = (props: MonthAhierProps) => {\r\n    const [year, setYear] = useState(props.year);\r\n    const [month, setMonth] = useState(props.month);\r\n    let firstDate: AhierDate = { date: 1, month: props.month, year: props.year };\r\n    const [firstDateOfMonth, setFirstDateOfMonth] = useState<AhierDate>(firstDate);\r\n    const [firstDayOfMonth, setFirstDayOfMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Read Sakawi Takai Ciim\r\n            let startDay = Number.parseInt(Helper.getStartDayByAhierMonth(year, month));\r\n            setFirstDayOfMonth(startDay);\r\n\r\n            let firstDate: AhierDate = { date: 1, month: month, year: year };\r\n            setFirstDateOfMonth(firstDate);\r\n        }\r\n\r\n        //init();\r\n    }, [year, month]);\r\n\r\n    function addDays(currentDate: AhierDate, addedDays: number) {\r\n        let result: AhierDate = {\r\n            date: 1,\r\n            month: AhierMonthEnum.BilanSa,\r\n            year: { nasak: NasakEnum.Kabaw, ikasSarak: IkasSarakEnum.Hak }\r\n        };\r\n\r\n        let numberOfDays = Helper.getDayNumbersOfAhierMonth(currentDate.year, currentDate.month);\r\n        let newDays = currentDate.date + addedDays;\r\n        let newMonth = currentDate.month;\r\n        let newYear = currentDate.year;\r\n\r\n        if (newDays > numberOfDays) {\r\n            if (currentDate.month < 11) {\r\n                newMonth = currentDate.month + 1;\r\n            } else {\r\n                newMonth = 0;\r\n\r\n                // Nasak\r\n                if (currentDate.year.nasak < 11) {\r\n                    newYear.nasak = currentDate.year.nasak + 1;\r\n                } else {\r\n                    newYear.nasak = 0;\r\n                }\r\n\r\n                // Ikas Sarak\r\n                if (currentDate.year.ikasSarak < 7) {\r\n                    newYear.ikasSarak = currentDate.year.ikasSarak + 1;\r\n                } else {\r\n                    newYear.ikasSarak = 0;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                month: newMonth,\r\n                year: newYear\r\n            };\r\n\r\n        } else if (newDays <= 0) {\r\n            if (currentDate.month > 0) {\r\n                newMonth = currentDate.month - 1;\r\n            } else {\r\n                newMonth = 11;\r\n\r\n                // Nasak\r\n                if (currentDate.year.nasak > 0) {\r\n                    newYear.nasak = currentDate.year.nasak - 1;\r\n                } else {\r\n                    newYear.nasak = 11;\r\n                }\r\n\r\n                // Ikas Sarak\r\n                if (currentDate.year.ikasSarak > 0) {\r\n                    newYear.ikasSarak = currentDate.year.ikasSarak - 1;\r\n                } else {\r\n                    newYear.ikasSarak = 7;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                date: Helper.getDayNumbersOfAhierMonth(currentDate.year, currentDate.month - 1) + newDays,\r\n                month: newMonth,\r\n                year: newYear\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                month: currentDate.month,\r\n                year: currentDate.year\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function handleGoToToday() {\r\n        setMonth(AhierMonthEnum.BilanSa);\r\n        setYear({ nasak: NasakEnum.Kabaw, ikasSarak: IkasSarakEnum.Hak });\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        if (month > 0) {\r\n            setMonth(month - 1);\r\n        } else {\r\n            setMonth(11);\r\n\r\n            // Nasak\r\n            if (year.nasak > 0) {\r\n                setYear({ nasak: year.nasak - 1, ikasSarak: year.ikasSarak - 1 });\r\n            } else {\r\n                setYear({ nasak: 11, ikasSarak: year.ikasSarak - 1 });\r\n            }\r\n\r\n            // Ikas Sarak\r\n            if (year.ikasSarak > 0) {\r\n                setYear({ nasak: year.nasak - 1, ikasSarak: year.ikasSarak - 1 });\r\n            } else {\r\n                setYear({ nasak: year.nasak - 1, ikasSarak: 7 });\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        if (month < 11) {\r\n            setMonth(month + 1);\r\n        } else {\r\n            setMonth(0);\r\n\r\n            // Nasak\r\n            if (year.nasak < 11) {\r\n                setYear({ nasak: year.nasak + 1, ikasSarak: year.ikasSarak + 1 });\r\n            } else {\r\n                setYear({ nasak: 0, ikasSarak: year.ikasSarak + 1 });\r\n            }\r\n\r\n            // Ikas Sarak\r\n            if (year.ikasSarak < 7) {\r\n                setYear({ nasak: year.nasak + 1, ikasSarak: year.ikasSarak + 1 });\r\n            } else {\r\n                setYear({ nasak: year.nasak + 1, ikasSarak: 0 });\r\n            }\r\n        }\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let cellDate = addDays(firstDateOfMonth, (count - firstDayOfMonth + 1));\r\n            let dateAhier: AhierDate = {\r\n                date: cellDate.date,\r\n                month: cellDate.month,\r\n                year: cellDate.year\r\n            }\r\n            cells.push(<DayAhier key={`cell${weeks}-${days}`} dateAhier={dateAhier}></DayAhier>);\r\n            count++\r\n        }\r\n\r\n        rows.push(<tr key={weeks}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={4} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginLeft: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Today</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={5} style={{ textAlign: \"center\" }}>\r\n                    <h2>{AhierMonthEnum[month]} {`(${(month + 1)})`} - {NasakEnum[year.nasak]} {IkasSarakEnum[year.ikasSarak]}</h2>\r\n                </Col>\r\n                <Col md={3}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table striped bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\nimport Helper from \"../utility/helper\";\r\n\r\nexport interface AwalDate {\r\n    date: number;\r\n    month: AwalMonthEnum;\r\n    year: AwalYear;\r\n}\r\n\r\nexport interface AwalMonth {\r\n    month: AwalMonthEnum;\r\n    year: AwalYear;\r\n}\r\n\r\nexport interface AwalYear {\r\n    ikasSarak: IkasSarakEnum;\r\n    yearNumber?: number;\r\n}\r\n\r\n\r\nexport function addAwalMonths(currentMonth: AwalMonth, addedMonths: number) {\r\n    let newMonth = currentMonth.month + addedMonths;\r\n    let quotient = Math.floor(newMonth / 12);\r\n    let remain = Helper.getMod(newMonth, 12);\r\n\r\n    let result: AwalMonth = {\r\n        month: remain,\r\n        year: addAwalYears(currentMonth.year, quotient)\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function addAwalYears(currentYear: AwalYear, addedYears: number) {\r\n    let newIkasSarak = currentYear.ikasSarak + addedYears;\r\n    let remain = Helper.getMod(newIkasSarak, 8);\r\n    let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n    let result: AwalYear = {\r\n        ikasSarak: remain,\r\n        yearNumber: newYearNumber\r\n    }\r\n\r\n    return result;\r\n}","import { Col, Row } from \"react-bootstrap\";\r\nimport { IkasSarakEnum } from \"../enums/enum\";\r\nimport { AhierDate } from \"../model/AhierDate\";\r\nimport { AwalDate } from \"../model/AwalDate\";\r\n\r\ninterface DayAwalProps {\r\n    date?: Date;\r\n    dateAwal: AwalDate;\r\n    dateAhier?: AhierDate;\r\n}\r\n\r\nconst divStyle: React.CSSProperties = {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    fontSize: \"0.8rem\",\r\n    color: \"green\",\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"0.1rem\",\r\n}\r\n\r\nexport const DayAwal = (props: DayAwalProps) => {\r\n    return (\r\n        <td>\r\n            <Row>\r\n                <Col md={4}></Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={4}></Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col style={divStyle} md={4}>\r\n                    {props.dateAwal.date}.{props.dateAwal.month + 1}.{IkasSarakEnum[props.dateAwal.year.ikasSarak]}\r\n                </Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n        </td>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, ButtonToolbar, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\nimport { addAwalMonths, AwalDate, AwalMonth, AwalYear } from \"../model/AwalDate\";\r\nimport Helper from '../utility/helper';\r\nimport { DayAwal } from \"./dayAwal\";\r\n\r\ninterface MonthAwalProps {\r\n    year: AwalYear;\r\n    month: AwalMonthEnum;\r\n}\r\n\r\nexport const MonthAwal = (props: MonthAwalProps) => {\r\n    const [year, setYear] = useState(props.year);\r\n    const [month, setMonth] = useState(props.month);\r\n    let firstDate: AwalDate = { date: 1, month: props.month, year: props.year };\r\n    const [firstDateOfMonth, setFirstDateOfMonth] = useState<AwalDate>(firstDate);\r\n    const [firstDayOfMonth, setFirstDayOfMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Read Sakawi Takai Ciim\r\n            let startDay = Number.parseInt(Helper.getStartDayByAwalMonth(year, month));\r\n            setFirstDayOfMonth(startDay);\r\n\r\n            let firstDate: AwalDate = { date: 1, month: month, year: year };\r\n            setFirstDateOfMonth(firstDate);\r\n\r\n\r\n        }\r\n\r\n        init();\r\n    }, [year, month]);\r\n\r\n\r\n\r\n    function addDays(currentDate: AwalDate, addedDays: number) {\r\n        let result: AwalDate = {\r\n            date: 1,\r\n            month: AwalMonthEnum.Jamadilakhir,\r\n            year: { ikasSarak: IkasSarakEnum.Liéh }\r\n        };\r\n\r\n        let numberOfDays = Helper.getDayNumbersOfAwalMonth(currentDate.year, currentDate.month);\r\n        let newDays = currentDate.date + addedDays;\r\n        let newMonth = currentDate.month;\r\n        let newYear = currentDate.year;\r\n\r\n        if (newDays > numberOfDays) {\r\n            if (currentDate.month < 11) {\r\n                newMonth = currentDate.month + 1;\r\n            } else {\r\n                newMonth = 0;\r\n\r\n                if (currentDate.year.ikasSarak < 7) {\r\n                    newYear.ikasSarak = currentDate.year.ikasSarak + 1;\r\n                } else {\r\n                    newYear.ikasSarak = 0;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                month: newMonth,\r\n                year: newYear\r\n            };\r\n\r\n        } else if (newDays <= 0) {\r\n            if (currentDate.month > 0) {\r\n                newMonth = currentDate.month - 1;\r\n            } else {\r\n                newMonth = 11;\r\n\r\n                if (currentDate.year.ikasSarak > 0) {\r\n                    newYear.ikasSarak = currentDate.year.ikasSarak - 1;\r\n                } else {\r\n                    newYear.ikasSarak = 7;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                date: Helper.getDayNumbersOfAwalMonth(currentDate.year, currentDate.month - 1) + newDays,\r\n                month: newMonth,\r\n                year: newYear\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                month: currentDate.month,\r\n                year: currentDate.year\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function handleGoToToday() {\r\n        /*let result = Helper.getAwalDateByGregoryDate(new Date(2016, 9, 2));\r\n        console.log('2016, 9, 2 => ', JSON.stringify(result));*/\r\n\r\n        /*let startAhierYear: AhierYear = {\r\n            nasak: Nasak.Pabuei,\r\n            ikasSarak: IkasSarak.Jim,\r\n            yearNumber: 2019\r\n        }\r\n\r\n        let newYear = addAhierYears(startAhierYear, -1);\r\n        console.log('new year: ' + JSON.stringify(newYear))*/\r\n\r\n        /*let matrix = Helper.buildMatrixCalendar(2020);\r\n        console.log('matrix: ' + JSON.stringify(matrix))*/\r\n\r\n        const awalMonth: AwalMonth = { month: 0, year: { ikasSarak: IkasSarakEnum.Liéh, yearNumber: 2020 } };\r\n        let newMonth = addAwalMonths(awalMonth, -13);\r\n        console.log('addAwalMonths : ' + JSON.stringify(newMonth))\r\n\r\n        setMonth(AwalMonthEnum.Syafar);\r\n        setYear({ ikasSarak: IkasSarakEnum.Hak });\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        if (month > 0) {\r\n            setMonth(month - 1);\r\n        } else {\r\n            setMonth(11);\r\n\r\n            if (year.ikasSarak > 0) {\r\n                setYear({ ikasSarak: year.ikasSarak - 1 });\r\n            } else {\r\n                setYear({ ikasSarak: 7 });\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        if (month < 11) {\r\n            setMonth(month + 1);\r\n        } else {\r\n            setMonth(0);\r\n\r\n            if (year.ikasSarak < 7) {\r\n                setYear({ ikasSarak: year.ikasSarak + 1 });\r\n            } else {\r\n                setYear({ ikasSarak: 0 });\r\n            }\r\n        }\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let cellDate = addDays(firstDateOfMonth, (count - firstDayOfMonth + 1));\r\n            let dateAwal: AwalDate = {\r\n                date: cellDate.date,\r\n                month: cellDate.month,\r\n                year: cellDate.year\r\n            }\r\n\r\n            cells.push(<DayAwal key={`cell${weeks}-${days}`} dateAwal={dateAwal}></DayAwal>);\r\n            count++\r\n        }\r\n\r\n        rows.push(<tr key={weeks}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={4} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginLeft: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Today</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={5} style={{ textAlign: \"center\" }}>\r\n                    <h2>{AwalMonthEnum[month]} {`(${(month + 1)})`} - {IkasSarakEnum[year.ikasSarak]}</h2>\r\n                </Col>\r\n                <Col md={3}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table striped bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, AwalMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierYear } from \"../model/AhierDate\";\r\nimport { AwalYear } from \"../model/AwalDate\";\r\nimport { CountDownBar } from \"./countDownBar\";\r\nimport { Month } from \"./month\";\r\nimport { MonthAhier } from \"./monthAhier\";\r\nimport { MonthAwal } from \"./monthAwal\";\r\n\r\nexport declare type SakawiType = 'sakawiAwal' | 'sakawiAhier' | 'solarCalendar';\r\n\r\nexport const Calendar = () => {\r\n    const [year] = useState(new Date().getFullYear());\r\n    const [month] = useState(new Date().getMonth());\r\n    const [sakawiType] = useState<SakawiType>('sakawiAwal');\r\n\r\n    // Sakawi Awal\r\n    let awalYear: AwalYear = { ikasSarak: IkasSarakEnum.Hak };\r\n    const [yearAwal] = useState(awalYear);\r\n    const [monthAwal] = useState(AwalMonthEnum.Sykban);\r\n\r\n    // Sakawi Ahier\r\n    let ahierYear: AhierYear = { nasak: NasakEnum.Kabaw, ikasSarak: IkasSarakEnum.Hak };\r\n    const [yearAhier] = useState(ahierYear);\r\n    const [monthAhier] = useState(AhierMonthEnum.BilanSa);\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <CountDownBar dateName={\"Rija Nagar\"} variantType='success' toDate={new Date(2022, 4, 28)} />\r\n                    <CountDownBar dateName={\"Katé\"} variantType='info' toDate={new Date(2021, 10, 5)} />\r\n                    <CountDownBar dateName={\"Ramawan\"} variantType='warning' toDate={new Date(2022, 4, 2)} />\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n                {sakawiType === 'solarCalendar' && <Month year={year} month={month} />}\r\n                {sakawiType === 'sakawiAwal' && <MonthAwal year={yearAwal} month={monthAwal} />}\r\n                {sakawiType === 'sakawiAhier' && <MonthAhier year={yearAhier} month={monthAhier} />}\r\n            </Row>\r\n        </>\r\n    );\r\n}","import { Card, Col, Container, Row, ListGroup, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\n\r\ninterface LayoutProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst footerStyle: React.CSSProperties = {\r\n    background: \"#20232a\",\r\n    color: \"white\",\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\"\r\n}\r\n\r\nexport const Layout = (props: LayoutProps) => {\r\n    return (\r\n        <Container fluid>\r\n            {/* Header */}\r\n            <Row>\r\n            <Col>\r\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#home\">SAKAWI CHAM</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto my-2 my-lg-0\"\r\n                        style={{ maxHeight: '100px' }}\r\n                        navbarScroll>\r\n                            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                            <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            {/* Body */}\r\n            <Row>\r\n                <Col sm={2}>\r\n                    <Card>\r\n                        <Card.Header>Featured</Card.Header>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n                            <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n                            <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={9}>\r\n                    {props.children}\r\n                </Col>\r\n                <Col sm={1}></Col>\r\n            </Row>\r\n            {/* Fotter */}\r\n            <Row>\r\n                <Col>\r\n                    <p style={footerStyle}>{`© ${new Date().getFullYear()} Sakawi Cham`}</p>\r\n                </Col> \r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { Calendar } from './components/calendar';\nimport { Layout } from './Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Calendar/>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}